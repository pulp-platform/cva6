# Copyright 2021 OpenHW Group
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# Run functional regression checks
name: ci
on: [push, pull_request]

jobs:
  build-riscv-tests:
    name: build-riscv-tests
    runs-on: ubuntu-latest
    env:
      RISCV: /riscv
      NUM_JOBS: 4
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Prepare
      run: |
          ci/setup.sh
          tar -cf tools.tar tools
          tar -cf tmp.tar tmp
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: compiled-tools
        path: |
          tools.tar
          tmp.tar
  execute-riscv-tests:
    name: execute-riscv-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testcase: [asm-tests, mul, amo, fp, benchmarks]
        target: [cv64a6_imafdc_sv39, cv64a6_imafdc_sv39_wb, cv64a6_imafdc_sv39_hpdcache]
    env:
      RISCV: /riscv
    needs:
      build-riscv-tests
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Download a single artifact
      uses: actions/download-artifact@v4
      with:
        name: compiled-tools
    - name: Run Tests
      run: |
          set -x
          tar xf tools.tar
          tar xf tmp.tar
          source verif/sim/setup-env.sh
          make run-${{ matrix.testcase}}-verilator target=${{ matrix.target }}
  execute-hyp-riscv-tests:
    name: execute-hyp-riscv-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [cv64a6_imafdch_sv39]
    env:
      RISCV: /riscv
    needs:
      build-riscv-tests
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Download a single artifact
      uses: actions/download-artifact@v4
      with:
        name: compiled-tools
    - name: Run RISC-V Hypervisor Tests
      run: |
          tar xf tools.tar
          tar xf tmp.tar
          source verif/sim/setup-env.sh
          make run-hyp-tests-verilator target=${{ matrix.target }}